syntax = "proto3";

option go_package = "./;backendpb";

package backendpb;

service Backend {
  rpc Login(AuthRequest) returns (AuthResponse) {}
  rpc Register(AuthRequest) returns (AuthResponse) {}
  rpc AddBlog(AddBlogRequest) returns (AddBlogResponse) {}
  rpc ListBlog(ListBlogRequest) returns (ListBlogResponse) {}
  rpc GetBlog(GetBlogRequest) returns (GetBlogResponse) {}
  rpc Follow(FollowRequest) returns (Response) {}
  rpc IsFollow(FollowRequest) returns (CheckResponse) {}
  rpc GetUserBlog(UserBlogRequest) returns (ListBlogResponse) {}
  rpc GetUserFollowed(UserRequest) returns (ListUserResponse) {}
  rpc GetUserFollower(UserRequest) returns (ListUserResponse) {}
  rpc GetFollowBlog(UserBlogRequest) returns (ListBlogResponse) {}
}

message AuthRequest {
  string Username = 1;
  string Password = 2;
}

message AuthResponse {
  string Token = 1;
}

message Blog {
  string Title = 1;
  string Content = 2;
  string Author = 3;
}

message AddBlogRequest {
  Blog blog = 1;
}

message AddBlogResponse {
  int32 BlogId = 1;
}

message Response {
}

message ListBlogRequest {
  int32 pageNum = 1;
  int32 pageSize = 2;
}

message ListBlogResponse {
  int32 Total = 1;
  repeated Blog Blogs = 2;
}

message GetBlogRequest {
  int32 BlogId = 1;
}

message GetBlogResponse {
  Blog Blog = 1;
}

message FollowRequest {
  string Parent = 1;
  string Follower = 2;
}

message CheckResponse {
  bool Res = 1;
}

message UserRequest {
  string Username = 1;
}

message UserBlogRequest {
  string Username = 1;
  int32 pageNum = 2;
  int32 pageSize = 3;
}

message ListUserResponse {
  int32 Total = 1;
  repeated string Parents = 2;
}
